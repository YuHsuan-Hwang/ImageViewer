// source: imageviewer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ImageViewer.ImageResponse', null, global);
goog.exportSymbol('proto.ImageViewer.ImageResponse.OneRow', null, global);
goog.exportSymbol('proto.ImageViewer.ZoomRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ZoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ImageViewer.ZoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ZoomRequest.displayName = 'proto.ImageViewer.ZoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.ImageResponse.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.ImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ImageResponse.displayName = 'proto.ImageViewer.ImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ImageResponse.OneRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.ImageResponse.OneRow.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.ImageResponse.OneRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ImageResponse.OneRow.displayName = 'proto.ImageViewer.ImageResponse.OneRow';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ZoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ZoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ZoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sendStartTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    xScreensizeInPx: jspb.Message.getFieldWithDefault(msg, 2, 0),
    yScreensizeInPx: jspb.Message.getFieldWithDefault(msg, 3, 0),
    zoomDeltay: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ZoomRequest}
 */
proto.ImageViewer.ZoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ZoomRequest;
  return proto.ImageViewer.ZoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ZoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ZoomRequest}
 */
proto.ImageViewer.ZoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSendStartTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXScreensizeInPx(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYScreensizeInPx(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setZoomDeltay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ZoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ZoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ZoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSendStartTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getXScreensizeInPx();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getYScreensizeInPx();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getZoomDeltay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 send_start_time = 1;
 * @return {number}
 */
proto.ImageViewer.ZoomRequest.prototype.getSendStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomRequest} returns this
 */
proto.ImageViewer.ZoomRequest.prototype.setSendStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 x_screensize_in_px = 2;
 * @return {number}
 */
proto.ImageViewer.ZoomRequest.prototype.getXScreensizeInPx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomRequest} returns this
 */
proto.ImageViewer.ZoomRequest.prototype.setXScreensizeInPx = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y_screensize_in_px = 3;
 * @return {number}
 */
proto.ImageViewer.ZoomRequest.prototype.getYScreensizeInPx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomRequest} returns this
 */
proto.ImageViewer.ZoomRequest.prototype.setYScreensizeInPx = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 zoom_deltay = 4;
 * @return {number}
 */
proto.ImageViewer.ZoomRequest.prototype.getZoomDeltay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomRequest} returns this
 */
proto.ImageViewer.ZoomRequest.prototype.setZoomDeltay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.ImageResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskStartTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sendStartTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageDataList: jspb.Message.toObjectList(msg.getImageDataList(),
    proto.ImageViewer.ImageResponse.OneRow.toObject, includeInstance),
    imageWidth: jspb.Message.getFieldWithDefault(msg, 5, 0),
    imageHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),
    xmin: jspb.Message.getFieldWithDefault(msg, 7, 0),
    ymin: jspb.Message.getFieldWithDefault(msg, 8, 0),
    vmin: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    vmax: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    xCoorMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    xCoorDelta: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    yCoorMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    yCoorDelta: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    xRangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    xRangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    yRangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    yRangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    rebinRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ImageResponse}
 */
proto.ImageViewer.ImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ImageResponse;
  return proto.ImageViewer.ImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ImageResponse}
 */
proto.ImageViewer.ImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskStartTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSendStartTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 4:
      var value = new proto.ImageViewer.ImageResponse.OneRow;
      reader.readMessage(value,proto.ImageViewer.ImageResponse.OneRow.deserializeBinaryFromReader);
      msg.addImageData(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageWidth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXmin(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYmin(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVmin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVmax(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXCoorMin(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXCoorDelta(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYCoorMin(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYCoorDelta(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXRangeMin(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXRangeMax(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYRangeMin(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYRangeMax(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRebinRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskStartTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSendStartTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ImageViewer.ImageResponse.OneRow.serializeBinaryToWriter
    );
  }
  f = message.getImageWidth();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getImageHeight();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getXmin();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getYmin();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getVmin();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getVmax();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getXCoorMin();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getXCoorDelta();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getYCoorMin();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getYCoorDelta();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getXRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getXRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getYRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getYRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getRebinRatio();
  if (f !== 0.0) {
    writer.writeFloat(
      19,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.ImageResponse.OneRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ImageResponse.OneRow.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ImageResponse.OneRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ImageResponse.OneRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ImageResponse.OneRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowDataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ImageResponse.OneRow}
 */
proto.ImageViewer.ImageResponse.OneRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ImageResponse.OneRow;
  return proto.ImageViewer.ImageResponse.OneRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ImageResponse.OneRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ImageResponse.OneRow}
 */
proto.ImageViewer.ImageResponse.OneRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setRowDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ImageResponse.OneRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ImageResponse.OneRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ImageResponse.OneRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ImageResponse.OneRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowDataList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
};


/**
 * repeated float row_data = 1;
 * @return {!Array<number>}
 */
proto.ImageViewer.ImageResponse.OneRow.prototype.getRowDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.ImageResponse.OneRow} returns this
 */
proto.ImageViewer.ImageResponse.OneRow.prototype.setRowDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ImageResponse.OneRow} returns this
 */
proto.ImageViewer.ImageResponse.OneRow.prototype.addRowData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ImageResponse.OneRow} returns this
 */
proto.ImageViewer.ImageResponse.OneRow.prototype.clearRowDataList = function() {
  return this.setRowDataList([]);
};


/**
 * optional int64 task_start_time = 1;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getTaskStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setTaskStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 send_start_time = 2;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getSendStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setSendStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string filename = 3;
 * @return {string}
 */
proto.ImageViewer.ImageResponse.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated OneRow image_data = 4;
 * @return {!Array<!proto.ImageViewer.ImageResponse.OneRow>}
 */
proto.ImageViewer.ImageResponse.prototype.getImageDataList = function() {
  return /** @type{!Array<!proto.ImageViewer.ImageResponse.OneRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ImageViewer.ImageResponse.OneRow, 4));
};


/**
 * @param {!Array<!proto.ImageViewer.ImageResponse.OneRow>} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
*/
proto.ImageViewer.ImageResponse.prototype.setImageDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ImageViewer.ImageResponse.OneRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ImageResponse.OneRow}
 */
proto.ImageViewer.ImageResponse.prototype.addImageData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ImageViewer.ImageResponse.OneRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.clearImageDataList = function() {
  return this.setImageDataList([]);
};


/**
 * optional int32 image_width = 5;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getImageWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setImageWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 image_height = 6;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getImageHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setImageHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 xmin = 7;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getXmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setXmin = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 ymin = 8;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getYmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setYmin = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float vmin = 9;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getVmin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setVmin = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float vmax = 10;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getVmax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setVmax = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float x_coor_min = 11;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getXCoorMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setXCoorMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float x_coor_delta = 12;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getXCoorDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setXCoorDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float y_coor_min = 13;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getYCoorMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setYCoorMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float y_coor_delta = 14;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getYCoorDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setYCoorDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float x_range_min = 15;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getXRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setXRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float x_range_max = 16;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getXRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setXRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float y_range_min = 17;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getYRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setYRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float y_range_max = 18;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getYRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setYRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional float rebin_ratio = 19;
 * @return {number}
 */
proto.ImageViewer.ImageResponse.prototype.getRebinRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ImageResponse} returns this
 */
proto.ImageViewer.ImageResponse.prototype.setRebinRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


goog.object.extend(exports, proto.ImageViewer);

// source: imageviewer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ImageViewer.EventType', null, global);
goog.exportSymbol('proto.ImageViewer.InitDisplayRequest', null, global);
goog.exportSymbol('proto.ImageViewer.InitDisplayResponse', null, global);
goog.exportSymbol('proto.ImageViewer.InitDisplayResponse.OneRow', null, global);
goog.exportSymbol('proto.ImageViewer.ProfileRequest', null, global);
goog.exportSymbol('proto.ImageViewer.ProfileResponse', null, global);
goog.exportSymbol('proto.ImageViewer.Request', null, global);
goog.exportSymbol('proto.ImageViewer.Request.RequestMessageCase', null, global);
goog.exportSymbol('proto.ImageViewer.Response', null, global);
goog.exportSymbol('proto.ImageViewer.Response.ResponseMessageCase', null, global);
goog.exportSymbol('proto.ImageViewer.ZoomRequest', null, global);
goog.exportSymbol('proto.ImageViewer.ZoomResponse', null, global);
goog.exportSymbol('proto.ImageViewer.ZoomResponse.OneRow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ImageViewer.Request.oneofGroups_);
};
goog.inherits(proto.ImageViewer.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.Request.displayName = 'proto.ImageViewer.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.InitDisplayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ImageViewer.InitDisplayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.InitDisplayRequest.displayName = 'proto.ImageViewer.InitDisplayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ZoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ImageViewer.ZoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ZoomRequest.displayName = 'proto.ImageViewer.ZoomRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ImageViewer.ProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ProfileRequest.displayName = 'proto.ImageViewer.ProfileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ImageViewer.Response.oneofGroups_);
};
goog.inherits(proto.ImageViewer.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.Response.displayName = 'proto.ImageViewer.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.InitDisplayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.InitDisplayResponse.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.InitDisplayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.InitDisplayResponse.displayName = 'proto.ImageViewer.InitDisplayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.InitDisplayResponse.OneRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.InitDisplayResponse.OneRow.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.InitDisplayResponse.OneRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.InitDisplayResponse.OneRow.displayName = 'proto.ImageViewer.InitDisplayResponse.OneRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ZoomResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.ZoomResponse.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.ZoomResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ZoomResponse.displayName = 'proto.ImageViewer.ZoomResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ZoomResponse.OneRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.ZoomResponse.OneRow.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.ZoomResponse.OneRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ZoomResponse.OneRow.displayName = 'proto.ImageViewer.ZoomResponse.OneRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ImageViewer.ProfileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ImageViewer.ProfileResponse.repeatedFields_, null);
};
goog.inherits(proto.ImageViewer.ProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ImageViewer.ProfileResponse.displayName = 'proto.ImageViewer.ProfileResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ImageViewer.Request.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.ImageViewer.Request.RequestMessageCase = {
  REQUEST_MESSAGE_NOT_SET: 0,
  INIT_DISPLAY_REQUEST_MESSAGE: 3,
  ZOOM_REQUEST_MESSAGE: 4,
  PROFILE_REQUEST_MESSAGE: 5
};

/**
 * @return {proto.ImageViewer.Request.RequestMessageCase}
 */
proto.ImageViewer.Request.prototype.getRequestMessageCase = function() {
  return /** @type {proto.ImageViewer.Request.RequestMessageCase} */(jspb.Message.computeOneofCase(this, proto.ImageViewer.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sendStartTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    initDisplayRequestMessage: (f = msg.getInitDisplayRequestMessage()) && proto.ImageViewer.InitDisplayRequest.toObject(includeInstance, f),
    zoomRequestMessage: (f = msg.getZoomRequestMessage()) && proto.ImageViewer.ZoomRequest.toObject(includeInstance, f),
    profileRequestMessage: (f = msg.getProfileRequestMessage()) && proto.ImageViewer.ProfileRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.Request}
 */
proto.ImageViewer.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.Request;
  return proto.ImageViewer.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.Request}
 */
proto.ImageViewer.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ImageViewer.EventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSendStartTime(value);
      break;
    case 3:
      var value = new proto.ImageViewer.InitDisplayRequest;
      reader.readMessage(value,proto.ImageViewer.InitDisplayRequest.deserializeBinaryFromReader);
      msg.setInitDisplayRequestMessage(value);
      break;
    case 4:
      var value = new proto.ImageViewer.ZoomRequest;
      reader.readMessage(value,proto.ImageViewer.ZoomRequest.deserializeBinaryFromReader);
      msg.setZoomRequestMessage(value);
      break;
    case 5:
      var value = new proto.ImageViewer.ProfileRequest;
      reader.readMessage(value,proto.ImageViewer.ProfileRequest.deserializeBinaryFromReader);
      msg.setProfileRequestMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSendStartTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getInitDisplayRequestMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ImageViewer.InitDisplayRequest.serializeBinaryToWriter
    );
  }
  f = message.getZoomRequestMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ImageViewer.ZoomRequest.serializeBinaryToWriter
    );
  }
  f = message.getProfileRequestMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ImageViewer.ProfileRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event_type = 1;
 * @return {!proto.ImageViewer.EventType}
 */
proto.ImageViewer.Request.prototype.getEventType = function() {
  return /** @type {!proto.ImageViewer.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ImageViewer.EventType} value
 * @return {!proto.ImageViewer.Request} returns this
 */
proto.ImageViewer.Request.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 send_start_time = 2;
 * @return {number}
 */
proto.ImageViewer.Request.prototype.getSendStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.Request} returns this
 */
proto.ImageViewer.Request.prototype.setSendStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional InitDisplayRequest init_display_request_message = 3;
 * @return {?proto.ImageViewer.InitDisplayRequest}
 */
proto.ImageViewer.Request.prototype.getInitDisplayRequestMessage = function() {
  return /** @type{?proto.ImageViewer.InitDisplayRequest} */ (
    jspb.Message.getWrapperField(this, proto.ImageViewer.InitDisplayRequest, 3));
};


/**
 * @param {?proto.ImageViewer.InitDisplayRequest|undefined} value
 * @return {!proto.ImageViewer.Request} returns this
*/
proto.ImageViewer.Request.prototype.setInitDisplayRequestMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ImageViewer.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ImageViewer.Request} returns this
 */
proto.ImageViewer.Request.prototype.clearInitDisplayRequestMessage = function() {
  return this.setInitDisplayRequestMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ImageViewer.Request.prototype.hasInitDisplayRequestMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ZoomRequest zoom_request_message = 4;
 * @return {?proto.ImageViewer.ZoomRequest}
 */
proto.ImageViewer.Request.prototype.getZoomRequestMessage = function() {
  return /** @type{?proto.ImageViewer.ZoomRequest} */ (
    jspb.Message.getWrapperField(this, proto.ImageViewer.ZoomRequest, 4));
};


/**
 * @param {?proto.ImageViewer.ZoomRequest|undefined} value
 * @return {!proto.ImageViewer.Request} returns this
*/
proto.ImageViewer.Request.prototype.setZoomRequestMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ImageViewer.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ImageViewer.Request} returns this
 */
proto.ImageViewer.Request.prototype.clearZoomRequestMessage = function() {
  return this.setZoomRequestMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ImageViewer.Request.prototype.hasZoomRequestMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProfileRequest profile_request_message = 5;
 * @return {?proto.ImageViewer.ProfileRequest}
 */
proto.ImageViewer.Request.prototype.getProfileRequestMessage = function() {
  return /** @type{?proto.ImageViewer.ProfileRequest} */ (
    jspb.Message.getWrapperField(this, proto.ImageViewer.ProfileRequest, 5));
};


/**
 * @param {?proto.ImageViewer.ProfileRequest|undefined} value
 * @return {!proto.ImageViewer.Request} returns this
*/
proto.ImageViewer.Request.prototype.setProfileRequestMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ImageViewer.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ImageViewer.Request} returns this
 */
proto.ImageViewer.Request.prototype.clearProfileRequestMessage = function() {
  return this.setProfileRequestMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ImageViewer.Request.prototype.hasProfileRequestMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.InitDisplayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.InitDisplayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.InitDisplayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.InitDisplayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    xScreensizeInPx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    yScreensizeInPx: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.InitDisplayRequest}
 */
proto.ImageViewer.InitDisplayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.InitDisplayRequest;
  return proto.ImageViewer.InitDisplayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.InitDisplayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.InitDisplayRequest}
 */
proto.ImageViewer.InitDisplayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXScreensizeInPx(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYScreensizeInPx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.InitDisplayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.InitDisplayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.InitDisplayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.InitDisplayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXScreensizeInPx();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getYScreensizeInPx();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 x_screensize_in_px = 1;
 * @return {number}
 */
proto.ImageViewer.InitDisplayRequest.prototype.getXScreensizeInPx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayRequest} returns this
 */
proto.ImageViewer.InitDisplayRequest.prototype.setXScreensizeInPx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y_screensize_in_px = 2;
 * @return {number}
 */
proto.ImageViewer.InitDisplayRequest.prototype.getYScreensizeInPx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayRequest} returns this
 */
proto.ImageViewer.InitDisplayRequest.prototype.setYScreensizeInPx = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ZoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ZoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ZoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    deltaY: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ZoomRequest}
 */
proto.ImageViewer.ZoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ZoomRequest;
  return proto.ImageViewer.ZoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ZoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ZoomRequest}
 */
proto.ImageViewer.ZoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeltaY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ZoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ZoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ZoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDeltaY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 channel = 1;
 * @return {number}
 */
proto.ImageViewer.ZoomRequest.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomRequest} returns this
 */
proto.ImageViewer.ZoomRequest.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 delta_y = 2;
 * @return {number}
 */
proto.ImageViewer.ZoomRequest.prototype.getDeltaY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomRequest} returns this
 */
proto.ImageViewer.ZoomRequest.prototype.setDeltaY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionX: jspb.Message.getFieldWithDefault(msg, 2, 0),
    positionY: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ProfileRequest}
 */
proto.ImageViewer.ProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ProfileRequest;
  return proto.ImageViewer.ProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ProfileRequest}
 */
proto.ImageViewer.ProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPositionX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPositionY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPositionX();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPositionY();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 channel = 1;
 * @return {number}
 */
proto.ImageViewer.ProfileRequest.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ProfileRequest} returns this
 */
proto.ImageViewer.ProfileRequest.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 position_x = 2;
 * @return {number}
 */
proto.ImageViewer.ProfileRequest.prototype.getPositionX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ProfileRequest} returns this
 */
proto.ImageViewer.ProfileRequest.prototype.setPositionX = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 position_y = 3;
 * @return {number}
 */
proto.ImageViewer.ProfileRequest.prototype.getPositionY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ProfileRequest} returns this
 */
proto.ImageViewer.ProfileRequest.prototype.setPositionY = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ImageViewer.Response.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.ImageViewer.Response.ResponseMessageCase = {
  RESPONSE_MESSAGE_NOT_SET: 0,
  INIT_DISPLAY_RESPONSE_MESSAGE: 4,
  ZOOM_RESPONSE_MESSAGE: 5,
  PROFILE_RESPONSE_MESSAGE: 6
};

/**
 * @return {proto.ImageViewer.Response.ResponseMessageCase}
 */
proto.ImageViewer.Response.prototype.getResponseMessageCase = function() {
  return /** @type {proto.ImageViewer.Response.ResponseMessageCase} */(jspb.Message.computeOneofCase(this, proto.ImageViewer.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    taskStartTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sendStartTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    initDisplayResponseMessage: (f = msg.getInitDisplayResponseMessage()) && proto.ImageViewer.InitDisplayResponse.toObject(includeInstance, f),
    zoomResponseMessage: (f = msg.getZoomResponseMessage()) && proto.ImageViewer.ZoomResponse.toObject(includeInstance, f),
    profileResponseMessage: (f = msg.getProfileResponseMessage()) && proto.ImageViewer.ProfileResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.Response}
 */
proto.ImageViewer.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.Response;
  return proto.ImageViewer.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.Response}
 */
proto.ImageViewer.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ImageViewer.EventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSendStartTime(value);
      break;
    case 4:
      var value = new proto.ImageViewer.InitDisplayResponse;
      reader.readMessage(value,proto.ImageViewer.InitDisplayResponse.deserializeBinaryFromReader);
      msg.setInitDisplayResponseMessage(value);
      break;
    case 5:
      var value = new proto.ImageViewer.ZoomResponse;
      reader.readMessage(value,proto.ImageViewer.ZoomResponse.deserializeBinaryFromReader);
      msg.setZoomResponseMessage(value);
      break;
    case 6:
      var value = new proto.ImageViewer.ProfileResponse;
      reader.readMessage(value,proto.ImageViewer.ProfileResponse.deserializeBinaryFromReader);
      msg.setProfileResponseMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTaskStartTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSendStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getInitDisplayResponseMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ImageViewer.InitDisplayResponse.serializeBinaryToWriter
    );
  }
  f = message.getZoomResponseMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ImageViewer.ZoomResponse.serializeBinaryToWriter
    );
  }
  f = message.getProfileResponseMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ImageViewer.ProfileResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType event_type = 1;
 * @return {!proto.ImageViewer.EventType}
 */
proto.ImageViewer.Response.prototype.getEventType = function() {
  return /** @type {!proto.ImageViewer.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ImageViewer.EventType} value
 * @return {!proto.ImageViewer.Response} returns this
 */
proto.ImageViewer.Response.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 task_start_time = 2;
 * @return {number}
 */
proto.ImageViewer.Response.prototype.getTaskStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.Response} returns this
 */
proto.ImageViewer.Response.prototype.setTaskStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 send_start_time = 3;
 * @return {number}
 */
proto.ImageViewer.Response.prototype.getSendStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.Response} returns this
 */
proto.ImageViewer.Response.prototype.setSendStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional InitDisplayResponse init_display_response_message = 4;
 * @return {?proto.ImageViewer.InitDisplayResponse}
 */
proto.ImageViewer.Response.prototype.getInitDisplayResponseMessage = function() {
  return /** @type{?proto.ImageViewer.InitDisplayResponse} */ (
    jspb.Message.getWrapperField(this, proto.ImageViewer.InitDisplayResponse, 4));
};


/**
 * @param {?proto.ImageViewer.InitDisplayResponse|undefined} value
 * @return {!proto.ImageViewer.Response} returns this
*/
proto.ImageViewer.Response.prototype.setInitDisplayResponseMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ImageViewer.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ImageViewer.Response} returns this
 */
proto.ImageViewer.Response.prototype.clearInitDisplayResponseMessage = function() {
  return this.setInitDisplayResponseMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ImageViewer.Response.prototype.hasInitDisplayResponseMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ZoomResponse zoom_response_message = 5;
 * @return {?proto.ImageViewer.ZoomResponse}
 */
proto.ImageViewer.Response.prototype.getZoomResponseMessage = function() {
  return /** @type{?proto.ImageViewer.ZoomResponse} */ (
    jspb.Message.getWrapperField(this, proto.ImageViewer.ZoomResponse, 5));
};


/**
 * @param {?proto.ImageViewer.ZoomResponse|undefined} value
 * @return {!proto.ImageViewer.Response} returns this
*/
proto.ImageViewer.Response.prototype.setZoomResponseMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ImageViewer.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ImageViewer.Response} returns this
 */
proto.ImageViewer.Response.prototype.clearZoomResponseMessage = function() {
  return this.setZoomResponseMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ImageViewer.Response.prototype.hasZoomResponseMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProfileResponse profile_response_message = 6;
 * @return {?proto.ImageViewer.ProfileResponse}
 */
proto.ImageViewer.Response.prototype.getProfileResponseMessage = function() {
  return /** @type{?proto.ImageViewer.ProfileResponse} */ (
    jspb.Message.getWrapperField(this, proto.ImageViewer.ProfileResponse, 6));
};


/**
 * @param {?proto.ImageViewer.ProfileResponse|undefined} value
 * @return {!proto.ImageViewer.Response} returns this
*/
proto.ImageViewer.Response.prototype.setProfileResponseMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ImageViewer.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ImageViewer.Response} returns this
 */
proto.ImageViewer.Response.prototype.clearProfileResponseMessage = function() {
  return this.setProfileResponseMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ImageViewer.Response.prototype.hasProfileResponseMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.InitDisplayResponse.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.InitDisplayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.InitDisplayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.InitDisplayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.InitDisplayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    origWidth: jspb.Message.getFieldWithDefault(msg, 2, 0),
    origHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channelNum: jspb.Message.getFieldWithDefault(msg, 4, 0),
    vminList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null ? undefined : f,
    vmaxList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    imageDataList: jspb.Message.toObjectList(msg.getImageDataList(),
    proto.ImageViewer.InitDisplayResponse.OneRow.toObject, includeInstance),
    channel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    imageWidth: jspb.Message.getFieldWithDefault(msg, 9, 0),
    imageHeight: jspb.Message.getFieldWithDefault(msg, 10, 0),
    xCoorMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    xCoorDelta: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    yCoorMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    yCoorDelta: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    xRangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    xRangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    yRangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    yRangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    xmin: jspb.Message.getFieldWithDefault(msg, 19, 0),
    ymin: jspb.Message.getFieldWithDefault(msg, 20, 0),
    rebinRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.InitDisplayResponse}
 */
proto.ImageViewer.InitDisplayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.InitDisplayResponse;
  return proto.ImageViewer.InitDisplayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.InitDisplayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.InitDisplayResponse}
 */
proto.ImageViewer.InitDisplayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrigWidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrigHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelNum(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setVminList(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setVmaxList(value);
      break;
    case 7:
      var value = new proto.ImageViewer.InitDisplayResponse.OneRow;
      reader.readMessage(value,proto.ImageViewer.InitDisplayResponse.OneRow.deserializeBinaryFromReader);
      msg.addImageData(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageWidth(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageHeight(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXCoorMin(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXCoorDelta(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYCoorMin(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYCoorDelta(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXRangeMin(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXRangeMax(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYRangeMin(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYRangeMax(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXmin(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYmin(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRebinRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.InitDisplayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.InitDisplayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.InitDisplayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.InitDisplayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrigWidth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOrigHeight();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getChannelNum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getVminList();
  if (f.length > 0) {
    writer.writePackedFloat(
      5,
      f
    );
  }
  f = message.getVmaxList();
  if (f.length > 0) {
    writer.writePackedFloat(
      6,
      f
    );
  }
  f = message.getImageDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ImageViewer.InitDisplayResponse.OneRow.serializeBinaryToWriter
    );
  }
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getImageWidth();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getImageHeight();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getXCoorMin();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getXCoorDelta();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getYCoorMin();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getYCoorDelta();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getXRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getXRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getYRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getYRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = message.getXmin();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getYmin();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getRebinRatio();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.InitDisplayResponse.OneRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.InitDisplayResponse.OneRow.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.InitDisplayResponse.OneRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.InitDisplayResponse.OneRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.InitDisplayResponse.OneRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointDataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.InitDisplayResponse.OneRow}
 */
proto.ImageViewer.InitDisplayResponse.OneRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.InitDisplayResponse.OneRow;
  return proto.ImageViewer.InitDisplayResponse.OneRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.InitDisplayResponse.OneRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.InitDisplayResponse.OneRow}
 */
proto.ImageViewer.InitDisplayResponse.OneRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setPointDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.InitDisplayResponse.OneRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.InitDisplayResponse.OneRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.InitDisplayResponse.OneRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.InitDisplayResponse.OneRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointDataList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
};


/**
 * repeated float point_data = 1;
 * @return {!Array<number>}
 */
proto.ImageViewer.InitDisplayResponse.OneRow.prototype.getPointDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.InitDisplayResponse.OneRow} returns this
 */
proto.ImageViewer.InitDisplayResponse.OneRow.prototype.setPointDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.InitDisplayResponse.OneRow} returns this
 */
proto.ImageViewer.InitDisplayResponse.OneRow.prototype.addPointData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.InitDisplayResponse.OneRow} returns this
 */
proto.ImageViewer.InitDisplayResponse.OneRow.prototype.clearPointDataList = function() {
  return this.setPointDataList([]);
};


/**
 * optional string filename = 1;
 * @return {string}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 orig_width = 2;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getOrigWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setOrigWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 orig_height = 3;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getOrigHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setOrigHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 channel_num = 4;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getChannelNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setChannelNum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated float vmin = 5;
 * @return {!Array<number>}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getVminList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setVminList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.addVmin = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.clearVminList = function() {
  return this.setVminList([]);
};


/**
 * repeated float vmax = 6;
 * @return {!Array<number>}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getVmaxList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setVmaxList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.addVmax = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.clearVmaxList = function() {
  return this.setVmaxList([]);
};


/**
 * repeated OneRow image_data = 7;
 * @return {!Array<!proto.ImageViewer.InitDisplayResponse.OneRow>}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getImageDataList = function() {
  return /** @type{!Array<!proto.ImageViewer.InitDisplayResponse.OneRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ImageViewer.InitDisplayResponse.OneRow, 7));
};


/**
 * @param {!Array<!proto.ImageViewer.InitDisplayResponse.OneRow>} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
*/
proto.ImageViewer.InitDisplayResponse.prototype.setImageDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ImageViewer.InitDisplayResponse.OneRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.InitDisplayResponse.OneRow}
 */
proto.ImageViewer.InitDisplayResponse.prototype.addImageData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ImageViewer.InitDisplayResponse.OneRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.clearImageDataList = function() {
  return this.setImageDataList([]);
};


/**
 * optional int32 channel = 8;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 image_width = 9;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getImageWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setImageWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 image_height = 10;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getImageHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setImageHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional float x_coor_min = 11;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getXCoorMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setXCoorMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float x_coor_delta = 12;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getXCoorDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setXCoorDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float y_coor_min = 13;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getYCoorMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setYCoorMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float y_coor_delta = 14;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getYCoorDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setYCoorDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float x_range_min = 15;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getXRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setXRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float x_range_max = 16;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getXRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setXRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float y_range_min = 17;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getYRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setYRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float y_range_max = 18;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getYRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setYRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional int32 xmin = 19;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getXmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setXmin = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 ymin = 20;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getYmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setYmin = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional float rebin_ratio = 21;
 * @return {number}
 */
proto.ImageViewer.InitDisplayResponse.prototype.getRebinRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.InitDisplayResponse} returns this
 */
proto.ImageViewer.InitDisplayResponse.prototype.setRebinRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.ZoomResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ZoomResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ZoomResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ZoomResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageDataList: jspb.Message.toObjectList(msg.getImageDataList(),
    proto.ImageViewer.ZoomResponse.OneRow.toObject, includeInstance),
    channel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    imageWidth: jspb.Message.getFieldWithDefault(msg, 3, 0),
    imageHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),
    xCoorMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    xCoorDelta: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    yCoorMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    yCoorDelta: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    xRangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    xRangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    yRangeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    yRangeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    xmin: jspb.Message.getFieldWithDefault(msg, 13, 0),
    ymin: jspb.Message.getFieldWithDefault(msg, 14, 0),
    rebinRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ZoomResponse}
 */
proto.ImageViewer.ZoomResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ZoomResponse;
  return proto.ImageViewer.ZoomResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ZoomResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ZoomResponse}
 */
proto.ImageViewer.ZoomResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ImageViewer.ZoomResponse.OneRow;
      reader.readMessage(value,proto.ImageViewer.ZoomResponse.OneRow.deserializeBinaryFromReader);
      msg.addImageData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageHeight(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXCoorMin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXCoorDelta(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYCoorMin(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYCoorDelta(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXRangeMin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setXRangeMax(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYRangeMin(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setYRangeMax(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXmin(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYmin(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRebinRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ZoomResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ZoomResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ZoomResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ImageViewer.ZoomResponse.OneRow.serializeBinaryToWriter
    );
  }
  f = message.getChannel();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getImageWidth();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getImageHeight();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getXCoorMin();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getXCoorDelta();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getYCoorMin();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getYCoorDelta();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getXRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getXRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getYRangeMin();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getYRangeMax();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getXmin();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getYmin();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getRebinRatio();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.ZoomResponse.OneRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ZoomResponse.OneRow.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ZoomResponse.OneRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ZoomResponse.OneRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomResponse.OneRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointDataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ZoomResponse.OneRow}
 */
proto.ImageViewer.ZoomResponse.OneRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ZoomResponse.OneRow;
  return proto.ImageViewer.ZoomResponse.OneRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ZoomResponse.OneRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ZoomResponse.OneRow}
 */
proto.ImageViewer.ZoomResponse.OneRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setPointDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ZoomResponse.OneRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ZoomResponse.OneRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ZoomResponse.OneRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ZoomResponse.OneRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointDataList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
};


/**
 * repeated float point_data = 1;
 * @return {!Array<number>}
 */
proto.ImageViewer.ZoomResponse.OneRow.prototype.getPointDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.ZoomResponse.OneRow} returns this
 */
proto.ImageViewer.ZoomResponse.OneRow.prototype.setPointDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ZoomResponse.OneRow} returns this
 */
proto.ImageViewer.ZoomResponse.OneRow.prototype.addPointData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ZoomResponse.OneRow} returns this
 */
proto.ImageViewer.ZoomResponse.OneRow.prototype.clearPointDataList = function() {
  return this.setPointDataList([]);
};


/**
 * repeated OneRow image_data = 1;
 * @return {!Array<!proto.ImageViewer.ZoomResponse.OneRow>}
 */
proto.ImageViewer.ZoomResponse.prototype.getImageDataList = function() {
  return /** @type{!Array<!proto.ImageViewer.ZoomResponse.OneRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ImageViewer.ZoomResponse.OneRow, 1));
};


/**
 * @param {!Array<!proto.ImageViewer.ZoomResponse.OneRow>} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
*/
proto.ImageViewer.ZoomResponse.prototype.setImageDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ImageViewer.ZoomResponse.OneRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ZoomResponse.OneRow}
 */
proto.ImageViewer.ZoomResponse.prototype.addImageData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ImageViewer.ZoomResponse.OneRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.clearImageDataList = function() {
  return this.setImageDataList([]);
};


/**
 * optional int32 channel = 2;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setChannel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 image_width = 3;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getImageWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setImageWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 image_height = 4;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getImageHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setImageHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional float x_coor_min = 5;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getXCoorMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setXCoorMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float x_coor_delta = 6;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getXCoorDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setXCoorDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float y_coor_min = 7;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getYCoorMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setYCoorMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float y_coor_delta = 8;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getYCoorDelta = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setYCoorDelta = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float x_range_min = 9;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getXRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setXRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float x_range_max = 10;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getXRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setXRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float y_range_min = 11;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getYRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setYRangeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float y_range_max = 12;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getYRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setYRangeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 xmin = 13;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getXmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setXmin = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 ymin = 14;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getYmin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setYmin = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional float rebin_ratio = 15;
 * @return {number}
 */
proto.ImageViewer.ZoomResponse.prototype.getRebinRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ImageViewer.ZoomResponse} returns this
 */
proto.ImageViewer.ZoomResponse.prototype.setRebinRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ImageViewer.ProfileResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ImageViewer.ProfileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ImageViewer.ProfileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ImageViewer.ProfileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ProfileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileXList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    profileYList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    profileZList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ImageViewer.ProfileResponse}
 */
proto.ImageViewer.ProfileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ImageViewer.ProfileResponse;
  return proto.ImageViewer.ProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ImageViewer.ProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ImageViewer.ProfileResponse}
 */
proto.ImageViewer.ProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setProfileXList(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setProfileYList(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setProfileZList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ImageViewer.ProfileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ImageViewer.ProfileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ImageViewer.ProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ImageViewer.ProfileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileXList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
  f = message.getProfileYList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getProfileZList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
};


/**
 * repeated float profile_x = 1;
 * @return {!Array<number>}
 */
proto.ImageViewer.ProfileResponse.prototype.getProfileXList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.setProfileXList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.addProfileX = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.clearProfileXList = function() {
  return this.setProfileXList([]);
};


/**
 * repeated float profile_y = 2;
 * @return {!Array<number>}
 */
proto.ImageViewer.ProfileResponse.prototype.getProfileYList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.setProfileYList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.addProfileY = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.clearProfileYList = function() {
  return this.setProfileYList([]);
};


/**
 * repeated float profile_z = 3;
 * @return {!Array<number>}
 */
proto.ImageViewer.ProfileResponse.prototype.getProfileZList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.setProfileZList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.addProfileZ = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ImageViewer.ProfileResponse} returns this
 */
proto.ImageViewer.ProfileResponse.prototype.clearProfileZList = function() {
  return this.setProfileZList([]);
};


/**
 * @enum {number}
 */
proto.ImageViewer.EventType = {
  EMPTY_EVENT: 0,
  INIT_DISPLAY: 1,
  ZOOM: 2,
  PROFILE: 3
};

goog.object.extend(exports, proto.ImageViewer);
